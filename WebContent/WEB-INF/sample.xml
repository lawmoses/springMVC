<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	
<!-- chap07.EventController 에서 @Controller 읽어내는 것 @어노테이션 읽어서 매핑 시키는 것이다. -->
<!-- 어노테이션으로 읽으라는 말이다. -->

	<mvc:annotation-driven></mvc:annotation-driven>
	

<!-- 콘트롤러 자바소스 필요 없이 /index 하면 index로 보내준다. view밑에 있는 것  -->
	
	<mvc:view-controller path="/index" view-name="index"/>
	<mvc:view-controller path="/index2" view-name="index2"/>
	<mvc:view-controller path="/index3" view-name="index3"/>

<!-- ??? 디폴트 핸들러로 하겠다는 것임 -->
<!-- 즉, 핸들러가 없으니까 어노테이션으로 읽어라는 말이다.  -->
	
	<mvc:default-servlet-handler/>
	
	<!-- @Controller 로 되어있다. -->
	<bean class="chap07.event.EventController"></bean>
	
	<bean class="chap07.member.MemberController">
		<property name="memberService" ref="memberService"></property>
	</bean>
	
	<bean id="memberService" class="chap07.member.MemberService"></bean>
	
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	
	
<!-- 3/29(목)   ///////////////////////////////////////////////////////////////////////// -->
	
	<bean class="chap07.member.RegistrationController">
		<property name="memberService" ref="memberService" />
	</bean>
	
	
	
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.error</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	
	<bean class="chap07.file.FileController"></bean>
	
	<bean class="chap07.search.SearchController"></bean>
	
	

<!-- 3/29(목)  auth. Login //////////////////////////////////////////////////////////////// -->
	
	<bean id="authenticator" class="chap07.auth.Authenticator">
		<constructor-arg ref="memberService" />
	</bean>

	<bean class="chap07.auth.LoginController">
		<property name="authenticator" ref="authenticator" />
	</bean>


<!-- 3/30(금) /acl/밑있는 폴더는 로그인 되어있지 않으면 로그인 폴더로 가게 하는 것이다. -->

	<bean class="chap07.ac.ACLController">
		<property name="aclService" ref="aclService"></property>
	</bean>

	<bean id="aclService" class="chap07.ac.AclService"></bean>



<!-- 주의! 교과서 내용 그대로 아니고, 선생님께서 수정해 주신 것이다. -->
<!-- 스프링 인터셉터로 로그인 안했을 경우, 어디로 가라고 넘겨주는 것 -->
<!-- AuthIntercepter.java 에 들어가면 선생님께서 추가해주신 코드가 있다. () -->
	
	<mvc:interceptors> <!-- mvc:interceptors 이거 아래에 mvc:interceptor 을 여러개 매핑(mvc:mapping)시켜서 넣을 수 있다. -->
		<mvc:interceptor>
				<!-- 이거 걸어버리면 path가 /acl/**, /acl/**로그인이 안되면 안나와버린다. -->
			<mvc:mapping path="/acl/**"/>
			<mvc:mapping path="/event/**"/>
				<!-- 로그인 되었는지 안되었는지 물어보는 것 -->
			<bean class="chap07.common.AuthIntercepter"></bean>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/acl/**"/>
				<!-- 외부에서 가져올 수 있다는 것 -->
			<ref bean="commonModelInterceptor"></ref>
		</mvc:interceptor>
		
			<!-- 아래는 매핑이 없다. 그 의미는 모든 프로세스에 다 걸린다는 것이다. -->
			<!-- 모든 프로세스에 걸리므로 어떤  URI든 실행이 되면 실행 시간을 체크해주는 기능 -->
			<!-- 시간 체크하는 것 -->
		<bean class="chap07.common.MeasuringIntercepter"></bean>
	</mvc:interceptors>
			<!-- 위에서 부르므로 갈 수 있다. -->
	<bean id="commonModelInterceptor" class="chap07.common.CommonModelInterceptor"></bean>

	<bean class="chap07.calculator.CalculationController"></bean>
	

</beans>


